{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:9000/\";\nconst headers = {\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*'\n};\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"login\", {\n      username,\n      password\n    }, {\n      headers: headers\n    }).then(response => {\n      if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(firstname, lastname, email, usertype, password, userid) {\n    return axios.post(API_URL + \"register\", {\n      firstname,\n      lastname,\n      email,\n      usertype,\n      password,\n      userid\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  registerEmail(email) {\n    return axios.post(API_URL + \"Newsletter\", {\n      email\n    }, {\n      headers: headers\n    });\n  }\n\n  getProfile(username) {\n    return axios.post(API_URL + \"profile\", {\n      username\n    }, {\n      headers: this.authHeader()\n    }).then(response => {\n      return response.data;\n    });\n  }\n\n  authHeader() {\n    const userData = JSON.parse(localStorage.getItem('user'));\n\n    if (userData.token) {\n      return {\n        'token': userData.token\n      };\n    } else {\n      return {};\n    }\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/bharathi/Desktop/Startwell-working/Startwell_current/Client/src/services/auth.service.js"],"names":["axios","API_URL","headers","AuthService","login","username","password","post","then","response","data","localStorage","setItem","JSON","stringify","logout","removeItem","register","firstname","lastname","email","usertype","userid","getCurrentUser","parse","getItem","registerEmail","getProfile","authHeader","userData","token"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,MAAMC,OAAO,GAAG;AACd,kBAAgB,kBADF;AAEd,iCAAgC;AAFlB,CAAhB;;AAKA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACxB,WAAON,KAAK,CACTO,IADI,CACCN,OAAO,GAAG,OADX,EACoB;AACvBI,MAAAA,QADuB;AAEvBC,MAAAA;AAFuB,KADpB,EAIH;AACAJ,MAAAA,OAAO,EAAEA;AADT,KAJG,EAOJM,IAPI,CAOCC,QAAQ,IAAI;AAEhB,UAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACD,KAdI,CAAP;AAeD;;AAEDK,EAAAA,MAAM,GAAG;AACPJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,SAAD,EAAWC,QAAX,EAAoBC,KAApB,EAA0BC,QAA1B,EAAmCf,QAAnC,EAA4CgB,MAA5C,EAAoD;AAC1D,WAAOtB,KAAK,CAACO,IAAN,CAAWN,OAAO,GAAG,UAArB,EAAiC;AACtCiB,MAAAA,SADsC;AAC5BC,MAAAA,QAD4B;AACnBC,MAAAA,KADmB;AACbC,MAAAA,QADa;AACJf,MAAAA,QADI;AACKgB,MAAAA;AADL,KAAjC,CAAP;AAGD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAOV,IAAI,CAACW,KAAL,CAAWb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACjD;;AAEFC,EAAAA,aAAa,CAACN,KAAD,EACZ;AACF,WAAOpB,KAAK,CAACO,IAAN,CAAWN,OAAO,GAAC,YAAnB,EAAiC;AAACmB,MAAAA;AAAD,KAAjC,EAAyC;AAC9ClB,MAAAA,OAAO,EAAEA;AADqC,KAAzC,CAAP;AAIE;;AAGDyB,EAAAA,UAAU,CAACtB,QAAD,EAAW;AACpB,WAAOL,KAAK,CACTO,IADI,CACCN,OAAO,GAAG,SADX,EACsB;AACzBI,MAAAA;AADyB,KADtB,EAGH;AACAH,MAAAA,OAAO,EAAE,KAAK0B,UAAL;AADT,KAHG,EAMJpB,IANI,CAMCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KARI,CAAP;AASD;;AAIAkB,EAAAA,UAAU,GAAG;AACX,UAAMC,QAAQ,GAAGhB,IAAI,CAACW,KAAL,CAAWb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAjB;;AACA,QAAGI,QAAQ,CAACC,KAAZ,EACA;AACE,aAAO;AAAE,iBAAUD,QAAQ,CAACC;AAArB,OAAP;AACD,KAHD,MAGO;AACL,aAAO,EAAP;AACD;AACF;;AAhEgB;;AAmElB,eAAe,IAAI3B,WAAJ,EAAf","sourcesContent":["\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:9000/\";\n\nconst headers = {\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin' : '*'\n}\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"login\", {\n        username,\n        password\n      },{\n        headers: headers\n      })\n      .then(response => {\n\n        if (response.data) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(firstname,lastname,email,usertype,password,userid) {\n    return axios.post(API_URL + \"register\", {\n      firstname,lastname,email,usertype,password,userid\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n\n registerEmail(email) \n  {\nreturn axios.post(API_URL+\"Newsletter\", {email},{\n  headers: headers\n});\n     \n }\n\n \n getProfile(username) {\n  return axios\n    .post(API_URL + \"profile\", {\n      username\n    },{\n      headers: this.authHeader()\n    })\n    .then(response => {\n      return response.data;\n    });\n}\n\n\n\n authHeader() {\n   const userData = JSON.parse(localStorage.getItem('user'));\n   if(userData.token) \n   {\n     return { 'token' : userData.token };\n   } else {\n     return {};\n   }\n }\n}\n\nexport default new AuthService();\n\n"]},"metadata":{},"sourceType":"module"}